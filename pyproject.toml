[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.poetry]
name = "madonna"
version = "0.2.0"
description = "Python semver parsing library."
authors = [ "Tom Fleet <tomfleet2018@gmail.com>" ]
license = "MIT License"
homepage = "https://github.com/FollowTheProcess/madonna"
readme = "README.md"
repository = "https://github.com/FollowTheProcess/madonna"
documentation = "https://FollowTheProcess.github.io/madonna/"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Typing :: Typed",
]
keywords = [ "semver", "parser" ]
include = [ "madonna/py.typed" ]

[tool.poetry.urls]
Documentation = "https://FollowTheProcess.github.io/madonna/"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.dev-dependencies]
pytest = "7.2.1"
bump2version = "1.0.1"
flake8 = "5.0.4"
flake8-bugbear = "23.1.20"
isort = "5.12.0"
nox = "2022.11.21"
black = "23.1.0"
coverage-badge = "1.1.0"
coverage = "7.1.0"
toml = "0.10.2"
mypy = "1.0.0"
mkdocs = "1.4.2"
mkdocs-material = "9.0.12"
mkdocstrings = "0.20.0"
mkdocstrings-python = "0.8.3"
pre-commit = "3.0.4"
ward = "0.67.2b0"


[tool.isort]
profile = "black"

[tool.coverage.run]
omit = [ "*__init__.py" ]
branch = true

[tool.mypy]
files = [ "madonna/**/*.py", "noxfile.py" ]

ignore_missing_imports = true
strict = true
disallow_untyped_decorators = false
pretty = true

[[tool.mypy.overrides]]
module = [ "tests.*", "pytests.*" ]
ignore_errors = true

[tool.ruff]
line-length = 120
extend-select = [
  # https://github.com/charliermarsh/ruff#supported-rules
  "W",   # Pycodestyle warnings
  "UP",  # All pyupgrade rules
  "N",   # PEP8 naming
  "C90", # Complexity
  "C4",  # Flake8 comprehensions
  "ERA", # Commented out code
  "B",   # Flake8 bugbear
  "RUF", # Ruff specific rules
  "YTT", # Flake8 2020
  "ANN", # Type annotations
  "BLE", # No blind excepts
  "PT",  # Pytest style
  "RET", # Function returns
  "SIM", # Simplify
  "ARG", # Unused arguments
  "PTH", # Use pathlib over os.path
  "PGH", # Pygrep hooks
]
extend-ignore = [
  "B905",   # zip() without strict=
  "ANN101", # Missing type annotation for `self` in method
  "ANN102", # Missing type annotation for `cls` in classmethod
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ward]
path = "tests"
order = "random"
test-output-style = "dots-module"
