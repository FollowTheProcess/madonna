[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [ "-ra", "--strict-markers", "--strict-config" ]
xfail_strict = true
filterwarnings = [ "error" ]
log_cli_level = "info"
testpaths = [ "tests" ]
pythonpath = [ "src" ]

[tool.coverage.run]
plugins = [ "covdefaults" ]

[tool.mypy]
files = [ "**/*.py" ]
ignore_missing_imports = true
strict = true
disallow_untyped_decorators = false
pretty = true

[tool.poetry]
name = "madonna"
version = "0.2.0"
description = "Python semver parsing library."
authors = [ "Tom Fleet <tomfleet2018@gmail.com>" ]
license = "MIT License"
homepage = "https://github.com/FollowTheProcess/madonna"
readme = "README.md"
repository = "https://github.com/FollowTheProcess/madonna"
documentation = "https://FollowTheProcess.github.io/madonna/"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Utilities",
  "Typing :: Typed",
]
keywords = [ "semver", "parser" ]
include = [ "madonna/py.typed" ]
packages = [ { include = "madonna", from = "src" } ]

[tool.poetry.urls]
Documentation = "https://FollowTheProcess.github.io/madonna/"

[tool.poetry.dependencies]
python = "^3.8"

[tool.poetry.group.dev.dependencies]
pytest = "7.2.2"
bump2version = "1.0.1"
nox = "2022.11.21"
black = "23.1.0"
coverage-badge = "1.1.0"
coverage = "7.2.2"
toml = "0.10.2"
mypy = "1.1.1"
mkdocs = "1.4.2"
mkdocs-material = "9.1.4"
mkdocstrings = { version = "^0.20.0", extras = [ "python" ] }
pre-commit = "3.2.0"
pytest-cov = "^4.0.0"
covdefaults = "^2.2.2"
ruff = ">=0.0.257,<0.0.260"

[tool.ruff]
target-version = "py38"
line-length = 120
select = [
  # https://github.com/charliermarsh/ruff#supported-rules
  "E",   # Pycodestyle errors
  "F",   # Pyflakes errors
  "W",   # Pycodestyle warnings
  "UP",  # All pyupgrade rules
  "N",   # PEP8 naming
  "I",   # Isort
  "D",   # Pydocstyle
  "C90", # Complexity
  "C4",  # Flake8 comprehensions
  "ERA", # Commented out code
  "B",   # Flake8 bugbear
  "RUF", # Ruff specific rules
  "YTT", # Flake8 2020
  "ANN", # Type annotations
  "BLE", # No blind excepts
  "PIE", # Flake8 pie
  "PT",  # Pytest style
  "RET", # Function returns
  "SIM", # Simplify
  "ARG", # Unused arguments
  "PTH", # Use pathlib over os.path
  "PGH", # Pygrep hooks
]
ignore = [
  "D203",   # One blank line before class docstring
  "D212",   # Multi-line docstring summary should be on the first line
  "D105",   # Missing docstring in magic method (non init)
  "D200",   # One line docstring should all be on one line
  "D401",   # First line should be in imperative mood
  "D205",   # One blank line required between summary line and description
  "D417",   # Wants sphinx style docstrings
  "D406",   # Section names should end with a newline
  "D407",   # Missing dashed underline after section
  "ANN101", # Missing type annotation for self in method
  "ANN102", # Missing type annotation for cls in classmethod
  "PT011",  # ValueError is too vague
]

[tool.ruff.mccabe]
max-complexity = 15

[tool.ruff.isort]
required-imports = [ "from __future__ import annotations" ]

[tool.ruff.per-file-ignores]
"tests/**/*.py" = [
  "D100", # Missing docstring in public module
  "D103", # Missing docstring in public function
  "D104", # Missing docstring in public package
]
